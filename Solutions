{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Check If Two String Arrays are Equivalent.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gKvRt6oSB1UG"
      },
      "source": [
        "# **Check If Two String Arrays are Equivalent**\n",
        "\n",
        "Given two string arrays `word1` and `word2`, return true if the two arrays **represent** the same string, and false otherwise.\n",
        "\n",
        "A string is represented by an array if the array elements concatenated **in order** forms the string."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ECosa61ZBHpg"
      },
      "source": [
        "def arrayStringsAreEqual(word1, word2):\n",
        "  return \"\".join(word1) == \"\".join(word2)"
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cNRaXbZbEInF"
      },
      "source": [
        "## **Example 1:**\n",
        "\n",
        "```\n",
        "Input: word1 = [\"ab\", \"c\"], word2 = [\"a\", \"bc\"]\n",
        "Output: true\n",
        "Explanation:\n",
        "word1 represents string \"ab\" + \"c\" -> \"abc\"\n",
        "word2 represents string \"a\" + \"bc\" -> \"abc\"\n",
        "The strings are the same, so return true.\n",
        "```"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rN9W7cCxBLbO",
        "outputId": "230366fb-c53c-41b1-8213-9acd95ba1d47"
      },
      "source": [
        "word1 = [\"ab\", \"c\"]\n",
        "word2 = [\"a\", \"bc\"]\n",
        "\n",
        "arrayStringsAreEqual(word1, word2)"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kGZGd8ctEQxw"
      },
      "source": [
        "## **Example 2:**\n",
        "\n",
        "```\n",
        "Input: word1 = [\"a\", \"cb\"], word2 = [\"ab\", \"c\"]\n",
        "Output: false\n",
        "```"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "60WdEa-eBbeP",
        "outputId": "126df3d8-cafa-4bf5-bbb7-4b22662b295a"
      },
      "source": [
        "word1 = [\"a\", \"cb\"]\n",
        "word2 = [\"ab\", \"c\"]\n",
        "\n",
        "arrayStringsAreEqual(word1, word2)"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CkHpmHYFEZ2g"
      },
      "source": [
        "## **Example 3:**\n",
        "\n",
        "```\n",
        "Input: word1  = [\"abc\", \"d\", \"defg\"], word2 = [\"abcddefg\"]\n",
        "Output: true\n",
        "```"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uunpJFyeBiUW",
        "outputId": "a6850120-9ffa-460e-d881-19b30a62ebae"
      },
      "source": [
        "word1  = [\"abc\", \"d\", \"defg\"]\n",
        "word2 = [\"abcddefg\"]\n",
        "\n",
        "arrayStringsAreEqual(word1, word2)"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    }
  ]
}